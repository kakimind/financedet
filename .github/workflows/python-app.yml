on:
  schedule:
    - cron: '0 7 * * *'  # 매일 16:00 KST에 실행 (UTC 07:00)
  workflow_dispatch:  # 수동 실행을 위한 설정

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu 최신 버전에서 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # 리포지토리의 코드를 체크아웃

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # 사용할 Python 버전 설정

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # pip 업그레이드
          pip install -r requirements.txt  # requirements.txt에 명시된 패키지 설치

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # 사용할 Node.js 버전 설정

      - name: Run stock analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # OpenAI API 키 시크릿 사용
          MANUAL_RUN: ${{ github.event_name == 'workflow_dispatch' }}  # 수동 실행 여부 설정
        run: |
          echo "주식 분석 스크립트 실행 중..."  # 실행 시작 메시지
          python stock_analysis.py  # 주식 분석 스크립트 실행
          echo "주식 분석 스크립트 실행 완료."  # 실행 완료 메시지

      - name: Upload log file
        uses: actions/upload-artifact@v3  # 로그 파일 업로드
        with:
          name: stock-analysis-log  # 업로드할 아티팩트의 이름
          path: logs/stock_analysis.log  # logs 디렉토리의 로그 파일 경로

      - name: Get Korean Time
        run: |
          echo "한국 시간: $(node -e 'const getKoreaTime = () => { const now = new Date(); const diffConfig = now.getTimezoneOffset() * 60 * 1000; const diffKorea = 9 * 60 * 60 * 1000; const koreaTime = new Date(now.getTime() + diffConfig + diffKorea); return koreaTime.getFullYear() + \"년 \" + (koreaTime.getMonth() + 1) + \"월 \" + koreaTime.getDate() + \"일 \" + koreaTime.getHours() + \"시 \"; }; console.log(getKoreaTime());')"
